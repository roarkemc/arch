dist: bionic
sudo: required

language: python

services:
  - xvfb

env:
  global:
    - COVERAGE=true
    - USE_NUMBA=true
    - USE_PIP=false
    - STATSMODELS_MASTER=false
    - DOCBUILD=false
    - PYTEST_PATTERN="(not slow)"
    - PYTHONHASHSEED=0
    - MKL_NUM_THREADS=1
    - OMP_NUM_THREADS=1
    - VML_NUM_THREADS=1
    - secure: "dCvSzHmiqumrvQDQJXaPukd2TEituoUJTRJeBrLfEg0f1ZtAkoEcCudXuissODo1s/e+zClEhn3GRMGZc9QxKI0w8VHWeyMDHjFhyl4wubi35biUpXijYgs6IMqqdIo5oKcnMR6jG8uzuzPGDCpZh49+DgGU5E7rGHBgJ5Tdo8s="


matrix:
  fast_finish: true
  include:
  - python: 3.7
    env:
      - PYTHON=3.7
      - ARCH_CYTHON_COVERAGE=true
  - os: osx
    osx_image:  xcode11.3
    language: generic
    env:
      - USE_PIP=true
  - python: 3.8
    env:
      - PYTHON=3.8
      - STATSMODELS_MASTER=true
      - USE_PIP=true
      - COVERAGE=false
  - python: 3.7
    env:
      - PYTHON=3.7
      - NUMPY=1.16
      - SCIPY=1.2
      - MATPLOTLIB=2
      - PANDAS=0.23
  - python: 3.7
    env:
      - USE_PIP=true
      - USE_NUMBA=true
      - MATPLOTLIB=3
      - PYTEST_PATTERN="(slow or not slow)"
  - python: 3.7
    env:
      - PYTHON=3.7
      - DOCBUILD=true
      - MATPLOTLIB=3
      - NUMPY=1.17
  - python: 3.6
    env:
      - PYTHON=3.6
      - MATPLOTLIB=2
      - NUMPY=1.15
      - SCIPY=1
      - PYTEST_PATTERN="(slow or not slow)"
  - python: 3.7
    env:
      - PYTHON=3.7
      - USE_NUMBA=false
      - MATPLOTLIB=3
      - PYTEST_PATTERN="(slow or not slow)"
  - python: 3.6
    env:
      - PYTHON=3.6
      - NUMBA=0.35
  - python: 3.8
    env:
      - USE_PIP=true
      - NUMPY=1.18
      - USE_NUMBA=false
      - PYTEST_PATTERN="(slow or not slow)"

before_install:
  - source ci/travis-osx-setup.sh
  - python --version
  - git fetch --tags
  # Avoid noise from matplotlib
  - mkdir -p $HOME/.config/matplotlib
  # Build package list to avoid empty package=versions
  - |
    if [[ "$USE_PIP" == true ]]; then
      source ci/use-pip.sh
    else
      source ci/use-conda.sh
    fi
  - source ci/install-common.sh
  - if [[ "$STATSMODELS_MASTER" == true ]]; then sh ./ci/install-statsmodels-master.sh; fi;
  - pip list
  - export SRCDIR="$PWD"
  - export COVERAGE_OPTS="--cov-config .coveragerc --cov=arch --cov-report xml:coverage.xml --cov-report term"

install:
  - |
    if [[ "$COVERAGE" == true ]]; then
      pip install -e . --no-build-isolation
    else
      pip install .
    fi

script:
  - set -e
  - python ci/performance.py
  - |
    if [[ "$COVERAGE" == true ]]; then
      echo pytest -r a -m "$PYTEST_PATTERN" ${COVERAGE_OPTS} --durations=25 arch/tests/univariate/test_rescale.py
      pytest -r a -m "$PYTEST_PATTERN" ${COVERAGE_OPTS} --durations=25 arch
    else
      mkdir arch_test
      cd arch_test
      python -c "import arch; arch.test(['-r a','-m (not slow)'])"
      cd ..
    fi
  - set -e
  - |
    if [[ ${DOCBUILD} = true ]]; then
      sudo apt-get install -y enchant pandoc
      pip install sphinxcontrib-spelling sphinx-material
      pip list
      cd doc
      make html
      make html
      make spelling
      cd ..
      doctr deploy devel --build-tags
      if [[ -z ${TRAVIS_TAG} ]]; then
        echo "Not a tagged build."
      else
        doctr deploy . --build-tags
      fi
    fi
  - flake8 arch

after_success:
  # Test install coverage is in ./test
  - |
    if [[ "$COVERAGE" == true ]]; then
      codecov
      coveralls --rcfile="$SRCDIR"/.coveragerc
      wget -qO - https://coverage.codacy.com/get.sh | bash -s report -l Python -r coverage.xml
    fi

